import json
from collections import Counter

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery

import states.states
from loader import dp, db, bot
from utils.convert_to_json import convert_to_json


@dp.callback_query_handler(text="add_part")
async def add_sale(call: CallbackQuery):
    message_id = await db.get_message_id(call.message.chat.id)

    if message_id:
        try:
            await bot.delete_message(call.message.chat.id, message_id)
            await bot.delete_message(call.message.chat.id, message_id + 1)
        except:
            await bot.delete_message(call.message.chat.id, message_id - 1)

        await db.del_message_id(call.message.chat.id)
    else:
        pass

    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton("üîô–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
    )

    text = """–í–Ω–µ—Å–∏—Ç–µ –Ω–∏–∂–µ –≤ —Å—Ç—Ä–æ–∫–µ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–πüëá
<b>–ö–ê–¢–ê–õ–û–ñ–ù–´–ô –ù–û–ú–ï–†</b> –∑–∞–ø—á–∞—Å—Ç–∏ 
–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å‚ñ∂Ô∏è

‚ùóÔ∏è –ù–µ –ø–∏—à–∏—Ç–µ –º–∞—Ä–∫—É —Ç–µ—Ö–Ω–∏–∫–∏, –Ω–∏ –∫–∞–∫—É—é-–ª–∏–±–æ –¥—Ä—É–≥—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é! 
–ü–∏—à–∏—Ç–µ —Ç–æ–ª—å–∫–æ <b>–ö–ê–¢–ê–õ–û–ñ–ù–´–ô –ù–û–ú–ï–†</b> –∑–∞–ø—á–∞—Å—Ç–∏!
<i>‚ùóÔ∏è –ï—Å–ª–∏ –Ω–æ–º–µ—Ä–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, —Ç–æ –≤–Ω–µ—Å–∏—Ç–µ –∏—Ö —Å–ø–∏—Å–∫–æ–º, —Ä–∞–∑–¥–µ–ª—è—è –ó–∞–ø—è—Ç–æ–π!
‚ùóÔ∏è –°—Ç—Ä–æ–≥–æ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ—á–∫—É –≤–µ—Å—å —Å–ø–∏—Å–æ–∫!
‚ùóÔ∏è –í –∫–æ–Ω—Ü–µ –Ω–µ –Ω—É–∂–Ω–æ —Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø—è—Ç—É—é!</i>"""

    try:
        await call.message.edit_text(text, reply_markup=markup, parse_mode="HTML")
    except:
        pass

    await states.states.Sale.number.set()


@dp.message_handler(state=states.states.Sale.number)
async def set_number(message: types.Message, state: FSMContext):
    await db.add_message_id(message.chat.id, message.message_id)

    new_numbers = message.text.replace(" ", "").split(",")
    for i in new_numbers:
        if len(i) > 15:
            new_numbers.remove(i)
        elif "/n" in i:
            new_numbers.remove(i)

    old_numbers = await db.get_sales(message.chat.id)

    counter = 0

    count_new_numbers = 0

    if old_numbers:
        res = new_numbers + old_numbers

        for key, value in Counter(res).items():
            if value > 1:
                counter += value
            else:
                if key in new_numbers:
                    count_new_numbers += 1

        res_json = await convert_to_json(list(set(res)))

        await db.update_sales(message.chat.id, res_json)
    else:
        res = new_numbers

        for key, value in Counter(res).items():
            if value > 1:
                counter += value
            else:
                if key in new_numbers:
                    count_new_numbers += 1

        res_json = await convert_to_json(list(set(res)))

        await db.add_new_sale(message.chat.id, res_json)

    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data="add_part")]
        ]
    )

    text = f"üëâ–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –ø—Ä–æ–¥–∞–∂—É: <b>{count_new_numbers}</b>\n"

    if counter > 0:
        if counter % 2 == 0 and counter != 2:
            counter /= 2
        else:
            counter -= 1

    await message.answer(
        text=text + f"""üëâ–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–π: <b>{int(counter)}</b>\n
‚úÖ–í—ã –≤—Å—ë —Å–¥–µ–ª–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! 
–¢–µ–ø–µ—Ä—å –æ–∂–∏–¥–∞–π—Ç–µ –∫–æ–≥–¥–∞ <b>–±–æ—Ç</b> –Ω–∞–π–¥–µ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ –ø–æ–∫—É–ø–∞—Ç–µ—è –¥–ª—è –≤–∞—à–∏—Ö –∑–∞–ø—á–∞—Å—Ç–µ–π!
–°–æ–≥–ª–∞—Å–Ω–æ —Ç–µ—Ö –∫–∞—Ç–∞–ª–æ–∂–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –í—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –ø—Ä–æ–¥–∞–∂—É!

<i>–ï—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ –∑–∞–ø—á–∞—Å—Ç–∏ –≤ –ø—Ä–æ–¥–∞–∂—É, —Ç–æ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ 1 —à–∞–≥ –Ω–∞–∑–∞–¥, –∏ –¥–æ–±–∞–≤—å—Ç–µ –µ—â–µ –∫–∞—Ç–∞–ª–æ–∂–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ—Ö –∑–∞–ø—á–∞—Å—Ç–µ–π –∫–æ—Ç–æ—Ä—ã–µ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å!</i>""",
        reply_markup=markup, parse_mode="HTML")

    await state.finish()
